Metadata-Version: 2.2
Name: gdpr_obfuscator
Version: 0.1.0
Summary: A tool for GDPR-compliant data obfuscation
Home-page: https://github.com/yourusername/gdpr_obfuscator
Author: Your Name
Author-email: your.email@example.com
Keywords: gdpr,aws,data,privacy
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: boto3>=1.26.0
Requires-Dist: pandas>=1.5.0
Requires-Dist: pyarrow>=12.0.0
Requires-Dist: click>=8.0.0
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: pytest-mock>=3.10.0; extra == "dev"
Requires-Dist: moto>=4.1.0; extra == "dev"
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# GDPR Obfuscator

A Python tool for GDPR-compliant data obfuscation in AWS S3.

## Overview

This tool processes data being ingested to AWS and intercepts personally identifiable information (PII). 
It creates obfuscated copies of files while maintaining their original structure, ensuring GDPR compliance for data analysis.

## Features

- Processes CSV files (MVP)
- Supports JSON and Parquet files (extended functionality)
- Handles files up to 1MB
- AWS S3 integration
- Command-Line Interface (CLI)
- GDPR-compliant data anonymization

## Installation

1. Clone the repository:
```bash
git clone https://github.com/Svetlana-W/gdpr_obsuscator_s_wise.git
cd gdpr_obfuscator_s_wise

## Usage

# As a Library
from core_obfuscator import GDPRObfuscator

obfuscator = GDPRObfuscator()
config = {
    "file_to_obfuscate": "s3://my-bucket/data.csv",
    "pii_fields": ["name", "email_address"]
}
result = obfuscator.obfuscate(config)

# As a CLI
python cli.py config.json --output-bucket my-bucket --output-key output/data.csv


